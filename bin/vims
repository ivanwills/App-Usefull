#!/usr/bin/env perl

# Created on: 2009-08-13 11:00:59
# Create by:  Ivan Wills
# $Id$
# $Revision$, $HeadURL$, $Date$
# $Revision$, $Source$, $Date$

use strict;
use warnings;
use version;
use Scalar::Util;
use List::Util;
#use List::MoreUtils;
use Getopt::Long;
use Pod::Usage;
use Data::Dumper qw/Dumper/;
use English qw/ -no_match_vars /;
use FindBin qw/$Bin/;

our $VERSION = version->new('0.0.1');
my ($name)   = $PROGRAM_NAME =~ m{^.*/(.*?)$}mxs;

my %option = (
    verbose => 0,
    man     => 0,
    help    => 0,
    version => 0,
);

main();
exit 0;

sub main {

    Getopt::Long::Configure('bundling');
    GetOptions(
        \%option,
        'verbose|v+',
        'man',
        'help',
        'version',
    ) or pod2usage(2);

    if ( $option{'version'} ) {
        print "$name Version = $VERSION\n";
        exit 1;
    }
    elsif ( $option{'man'} ) {
        pod2usage( -verbose => 2 );
    }
    elsif ( $option{'help'} ) {
        pod2usage( -verbose => 1 );
    }

    # do stuff here
    my @procs = `/bin/ps auxf`;
    my $cols = shift @procs;
    my $headding = 0;
    my $screen   = '';
    my $term     = 0;

    for my $proc (@procs) {
        next if $proc !~ /^$ENV{USER}\s/;

        if ( $proc =~ m{/usr/bin/SCREEN .* /.devmode/(\w+)}xms ) {
            $screen = $1;
            $term   = 0;
        }
        elsif ( $screen && $proc =~ m{ \d \s+ \\_  }xms ) {
            $term++;
        }
        elsif ($term > 20) {
            $screen = '';
            $term   = 0;
        }

        next if $proc !~ /\Wvim\W/;

        print $cols if !$headding++;
        if ($screen) {
            print "# $screen $term ";
            $proc =~ s/( $ENV{USER} \s+ \d+ ) .*? vim/$1 vim/xms;
        }
        print $proc;
    }

    return;
}

__DATA__

=head1 NAME

vims - Determine which Screen is running a vim session.

=head1 VERSION

This documentation refers to vims version 0.1.

=head1 SYNOPSIS

   vims [option]

 OPTIONS:
  -v --verbose       Show more detailed option
     --version       Prints the version information
     --help          Prints this help information
     --man           Prints the full documentation for vims

=head1 DESCRIPTION

=head1 SUBROUTINES/METHODS

=head1 DIAGNOSTICS

=head1 CONFIGURATION AND ENVIRONMENT

=head1 DEPENDENCIES

=head1 INCOMPATIBILITIES

=head1 BUGS AND LIMITATIONS

There are no known bugs in this module.

Please report problems to Ivan Wills (ivan.wills@gmail.com).

Patches are welcome.

=head1 AUTHOR

Ivan Wills - (ivan.wills@gmail.com)

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2009 Ivan Wills (14 Mullion Close, Hornsby Heights, NSW Australia 2077).
All rights reserved.

This module is free software; you can redistribute it and/or modify it under
the same terms as Perl itself. See L<perlartistic>.  This program is
distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.

=cut
