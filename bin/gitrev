#!/usr/bin/env perl

# Created on: 2009-06-15 12:34:35
# Create by:  Ivan Wills
# $Id$
# $Revision$, $HeadURL$, $Date$
# $Revision$, $Source$, $Date$

use strict;
use warnings;
use version;
use Getopt::Long;
use Pod::Usage;
use Data::Dumper qw/Dumper/;
use English qw/ -no_match_vars /;
use FindBin qw/$Bin/;
use VCS::Which;
use File::Slurp qw/write_file/;
use File::Copy qw/copy/;

our $VERSION = version->new('0.0.1');
my ($name)   = $PROGRAM_NAME =~ m{^.*/(.*?)$}mxs;

my %option = (
    verbose => 0,
    man     => 0,
    help    => 0,
    VERSION => 0,
);

if ( !@ARGV ) {
    pod2usage( -verbose => 1 );
}

main();
exit 0;

sub main {

    Getopt::Long::Configure('bundling');
    GetOptions(
        \%option,
        'backup|b',
        'test|t!',
        'verbose|v+',
        'man',
        'help',
        'VERSION!',
    ) or pod2usage(2);
    my @files = @ARGV;

    if ( $option{'VERSION'} ) {
        print "$name Version = $VERSION\n";
        exit 1;
    }
    elsif ( $option{'man'} ) {
        pod2usage( -verbose => 2 );
    }
    elsif ( $option{'help'} ) {
        pod2usage( -verbose => 1 );
    }

    # do stuff here
    my $vcs = VCS::Which->new(dir => $files[0]);

    for my $file (@files) {
        if ( -d $file ) {
            push @files, get_changed($vcs, $file);
            next;
        }

        print "Reverting $file\n" if $option{verbose} || $option{test};
        next if $option{test};

        if ( $option{backup} ) {
            my $backup = $file . '~';
            my $i = 1;
            while ( -f $backup ) {
                $backup = "$file~" . $i++;
            }
            copy $file, $backup;
        }
        my $cat = $vcs->cat($file);
        write_file $file, $cat;
    }

    return;
}

sub get_changed {
    my ( $vcs, $dir ) = @_;
    my $status = $vcs->status('.');
    my @changed;

    for my $modified ( @{ $status->{modified} } ) {
        push @changed, $modified if $modified =~ /^$dir/;
    }

    return @changed;
}

__DATA__

=head1 NAME

gitrev - Reverts a file in a git repository to the last unmodified version of
that file.

=head1 VERSION

This documentation refers to gitrev version 0.1.

=head1 SYNOPSIS

   gitrev [option] file1 [file2 ...]

 OPTIONS:
  -b --backup        Create a backup copy of the file (uses ~ extension + a number if nessesary)

  -v --verbose       Show more detailed option
     --version       Prints the version information
     --help          Prints this help information
     --man           Prints the full documentation for gitrev

=head1 DESCRIPTION

=head1 SUBROUTINES/METHODS

=head1 DIAGNOSTICS

=head1 CONFIGURATION AND ENVIRONMENT

=head1 DEPENDENCIES

=head1 INCOMPATIBILITIES

=head1 BUGS AND LIMITATIONS

There are no known bugs in this module.

Please report problems to Ivan Wills (ivan.wills@gmail.com).

Patches are welcome.

=head1 AUTHOR

Ivan Wills - (ivan.wills@gmail.com)

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2009 Ivan Wills (14 Mullion Close, Hornsby Heights, NSW Australia 2077).
All rights reserved.

This module is free software; you can redistribute it and/or modify it under
the same terms as Perl itself. See L<perlartistic>.  This program is
distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.

=cut
