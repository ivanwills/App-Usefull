#!/usr/bin/env perl

# Created on: 2009-05-11 19:31:34
# Create by:  ivan
# $Id$
# $Revision$, $HeadURL$, $Date$
# $Revision$, $Source$, $Date$

use strict;
use warnings;
use version;
use Scalar::Util;
use List::Util;
#use List::MoreUtils;
use Getopt::Long;
use Pod::Usage;
use Data::Dumper qw/Dumper/;
use English qw/ -no_match_vars /;
use FindBin qw/$Bin/;

our $VERSION = version->new('0.0.1');
my ($name)   = $PROGRAM_NAME =~ m{^.*/(.*?)$}mxs;

my %option = (
    verbose => 0,
    man     => 0,
    help    => 0,
    VERSION => 0,
);

main();
exit 0;

sub main {

    Getopt::Long::Configure('bundling');
    GetOptions(
        \%option,
        'style|s=s',
        'verbose|v+',
        'man',
        'help',
        'version',
    ) or pod2usage(2);

    if ( $option{'version'} ) {
        print "$name Version = $VERSION\n";
        exit 1;
    }
    elsif ( $option{'man'} ) {
        pod2usage( -verbose => 2 );
    }
    elsif ( $option{'help'} ) {
        pod2usage( -verbose => 1 );
    }

    # do stuff here
    my @all_tests = get_tests();

    my @found_tests = glob "*.t";
    my $test_dir    = '';

    if (!@found_tests) {
        @found_tests = map {s{t/(?:\d\d-?)?}{}xms; $_} glob "t/*.t";  ## no critic
        $test_dir    = "t/";
    }

    my %found = map { $_ => 1 } @found_tests;

    TEST:
    for my $test ( sort @all_tests ) {
        next TEST if $found{$test};

        print
             !$option{style}            ? "templatecmd print perl/test/$test -o $test_dir$test\n"
            : $option{style} eq 'long'  ? "templatecmd print perl/test/$test -o $test_dir$test\n"
            : $option{style} eq 'short' ? "$test\n"
            :                             "Missing test $test\n";
    }

    return;
}

sub get_tests {
    my @tests = `templatecmd list perl/test/`;
    @tests = map { split /\s+/, $_ } @tests;

    return map { s{perl/test/}{}; $_ } @tests;  ## no critic
}

__DATA__

=head1 NAME

suggest-tests - Suggests tests based on templates found

=head1 VERSION

This documentation refers to suggest-tests version 0.1.

=head1 SYNOPSIS

   suggest-tests [option]

 OPTIONS:
  -s --style=[short|long]
                Set the output style (Default long)

  -v --verbose  Show more detailed option
     --VERSION  Prints the version information
     --help     Prints this help information
     --man      Prints the full documentation for suggest-tests

=head1 DESCRIPTION

=head1 SUBROUTINES/METHODS

=head1 DIAGNOSTICS

=head1 CONFIGURATION AND ENVIRONMENT

=head1 DEPENDENCIES

=head1 INCOMPATIBILITIES

=head1 BUGS AND LIMITATIONS

There are no known bugs in this module.

Please report problems to Ivan Wills (ivan.wills@gmail.com).

Patches are welcome.

=head1 AUTHOR

Ivan Wills - (ivan.wills@gmail.com)

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2009 Ivan Wills (14 Mullion Close, Hornsby Heights, NSW Australia 2077).
All rights reserved.

This module is free software; you can redistribute it and/or modify it under
the same terms as Perl itself. See L<perlartistic>.  This program is
distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.

=cut
